#include <stdio.h>
#include <stdlib.h>
#include <allegro.h>
#define SCREEN_W 1184
#define SCREEN_H 800
#define NBRFD 2 //nombre de page de fond du debut du jeu (ceux du menu)
#define NBRBM 4 //nombre de page de bouton differents par menu

void init_ALLEG(){
    allegro_init();
    set_color_depth(desktop_color_depth());

    if((set_gfx_mode(GFX_AUTODETECT_WINDOWED,SCREEN_W,SCREEN_H,0,0))!=0){
        allegro_message("Probleme de mode graphique !");
        allegro_exit();
        exit(EXIT_FAILURE);
    }
}

void recentre(int* x, int* y){//coordonnees appuye par la souris
    //initialisation des cadres de multiples de 32
    int cadreB=0, cadreD=0;
    //cherche les multiples de 32 juste au-dessus des coordonnees
    while(cadreB<*x || cadreD<*y || cadreB<*x && cadreD<*y){
        if(cadreB<*x){
            cadreB=cadreB+32;
        }
        else if(cadreD<*y){
            cadreD=cadreD+32;
        }
        else if(cadreB<*x && cadreD<*y){
            cadreB=cadreB+32;
            cadreD=cadreD+32;
        }
    }
    /*/
        enleve moins 16 du multiple de 32 juste au-dessus du cadre pour
        avoir le centre de la case, et l'attribuer aux coordonnees
    /*/
    *x=(cadreB-16);
    *y=cadreD-16;
}
//A REFAIRE
/*
int verifRayon(int* x, int* y, int* X, int* Y){

    int cadreA=(*X)-(16+(32*3)), cadreB=(*X)+(32*3), cadreC=(*Y)-(32*3),cadreD=(*Y)+(32*3);

    if(x>=(*X)-(16+(32*3)) && x<=(*X)+(16+(32*3)) && y==(*Y)){
        return 1;
    }
    else if(y>=(*Y)-(16+(32*3)) && y<=(*Y)+(16+(32*3)) && x==(*X)){
        return 1;
    }
    else if(x>=(*X)-48 && x<=(*X)+48 && y>=(*Y)-(16+(32*2)) && y<=(*Y)+(16+(32*2))){
        return 1;
    }
    else if(x>=(*X)-(16+(32*2)) && x<=(*X)+(16+(32*2)) && y>=(*Y)-48 && y<=(*Y)+48){
        return 1;
    }
}
*/

int debut(){

    /*
        Sous-programme servant a afficher le menu et d'attribuer les personnages au joueurs.
        On passera a la page suivante une fois le bon endroit cliqué autant de fois requis.
    */

    //initialisation et declaration des variables et des bitmaps
    int j=0, page=1, nbrJoueurs=0, fin=0;
    int numFond=0,numBouton=0;
    char nomfichier[50]={0};

    BITMAP* fond[2];//fond choisi
    BITMAP* bouton[5];//fond choisi
    BITMAP* buffy;//buffer

    for(numFond=0;numFond<NBRFD;numFond++){
        sprintf(nomfichier,"fond%d.bmp",numFond);
        fond[numFond]=load_bitmap(nomfichier,NULL);
    }
    for(numBouton=0;numBouton<NBRBM;numBouton++){
        sprintf(nomfichier,"page%d.bmp",numBouton);
        bouton[numBouton]=load_bitmap(nomfichier,NULL);
    }
    buffy=create_bitmap(SCREEN_W,SCREEN_H);

    //remet a 0 pour etape du menu
    numFond=0;
    numBouton=0;

    //installation du clavier et de la souris
    install_keyboard();
    install_mouse();
    show_mouse(screen);//affichage de la souris sur l'écran

    //////////////////
    //PROGRAMME MENU//
    //////////////////
    while(!key[KEY_ESC]){
        if(page==1){
                //1ERE: MENU
           blit(fond[numFond],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
           masked_blit(bouton[numBouton],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
           blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
           if((mouse_b & 1)&& mouse_x>470 && mouse_x<710 && mouse_y>427 && mouse_y<502){
                page++;
                numBouton++;
                numFond++;
           }
        }
        else if(page==2){
            //2EME: HISTOIRE JEU
            //bouton=histo;
            blit(fond[numFond],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            masked_blit(bouton[numBouton],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
            rest(50);
            if((mouse_b & 1)&& mouse_x>1084 && mouse_x<1108 && mouse_y>692 && mouse_y<728){
                page++;
                numBouton++;
            }
        }
        else if(page==3){
                //3EME: MENU JOUEURS
            //choix=fond2;
            //bouton=choixJ;
            blit(fond[numFond],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            masked_blit(bouton[numBouton],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
            rest(50);
            if((mouse_b & 1)&& mouse_x>181 && mouse_x<433 && mouse_y>100 && mouse_y<122 || (mouse_b & 1)&& mouse_x>235 && mouse_x<394 && mouse_y>136 && mouse_y<264){
                page++;
                numBouton++;
                nbrJoueurs=2;
            }
            else if((mouse_b & 1)&& mouse_x>417 && mouse_x<665 && mouse_y>322 && mouse_y<342 || (mouse_b & 1)&& mouse_x>464 && mouse_x<624 && mouse_y>357 && mouse_y<486){
                page++;
                numBouton++;
                nbrJoueurs=3;
            }
            else if((mouse_b & 1)&& mouse_x>713 && mouse_x<968 && mouse_y>551 && mouse_y<578 || (mouse_b & 1)&& mouse_x>767 && mouse_x<929 && mouse_y>588 && mouse_y<717){
                page++;
                numBouton++;
                nbrJoueurs=4;
            }
        }
        else if(page==4){
                //4EME: MENU DE SELECTION DES JOUEURS
            //bouton=selec;
            blit(fond[numFond],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            masked_blit(bouton[numBouton],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
            rest(50);
            if((mouse_b & 1) && mouse_x>151 && mouse_x<220 && mouse_y>442 && mouse_y<568){
                if(j==nbrJoueurs){
                    page++;
                    numBouton++;
                    //ATTENTION: SI DEJA ATTRIBUE ALORS IL NE
                }
                else{
                    //attribuer au personnage
                    j++;
                }
            }
            else if((mouse_b & 1) && mouse_x>435 && mouse_x<478 && mouse_y>452 && mouse_y<570 ){
                if(j==nbrJoueurs){
                    page++;
                    numBouton++;
                }
                else{
                    //attribuer au personnage
                    j++;
                }
            }
            else if((mouse_b & 1) && mouse_x>701 && mouse_x<775 && mouse_y>420 && mouse_y<567){
                if(j==nbrJoueurs){
                    page++;
                    numBouton++;
                }
                else{
                    //attribuer au personnage
                    j++;
                }
            }
            else if((mouse_b & 1)&& mouse_x>972 && mouse_x<1038 && mouse_y>453 && mouse_y<571){
                if(j==nbrJoueurs){
                    page++;
                    numBouton++;
                }
                else{
                    //attribuer au personnage
                    j++;
                }
            }
            else if(mouse_x>151 && mouse_x<220 && mouse_y>442 && mouse_y<568 || mouse_x>435 && mouse_x<478 && mouse_y>452 && mouse_y<570 || mouse_x>701 && mouse_x<775 && mouse_y>420 && mouse_y<567|| mouse_x>972 && mouse_x<1038 && mouse_y>453 && mouse_y<571){
                //le personnage s'agrandit
            }
        }
        else{
            fin=1;
            rest(500);//pause avant fin du sous-programme
            return fin;
        }
        /*
        else{
            blit(fond[numFond],buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            //masked_blit(bouton,buffy,0,0,0,0,SCREEN_W,SCREEN_H);
            blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
            rest(50);
        }*/
    }
}


int main()
{
    //Declaration des bitmaps et des variables
    int i=0,x=16,y=48,X=0,Y=0;
    int cadreA=0, cadreB=0, cadreC=0,cadreD=0;
    int finMenu=0;

    BITMAP* fond;//premier fond
    BITMAP* fond2;//deuxieme fond
    BITMAP* perso;
    BITMAP* buffy;//buffer
    BITMAP* cloud;
    BITMAP* cloud2;
    BITMAP* objet;

    init_ALLEG();//initialisation

    //initialisation des bitmaps
    //fond=load_bitmap("dep2.bmp",NULL);
    fond=load_bitmap("quadrille.bmp",NULL);
    fond2=load_bitmap("blu.bmp",NULL);
    cloud=load_bitmap("cloud3.bmp",NULL);
    cloud2=load_bitmap("cloud5.bmp",NULL);
    objet=load_bitmap("MapInfoObjet.bmp",NULL);
    //personnage
    perso=load_bitmap("Idle.bmp",NULL);
    buffy=create_bitmap(SCREEN_W,SCREEN_H);

    //installation du clavier et de la souris
    install_keyboard();
    install_mouse();
    show_mouse(screen);//affichage de la souris sur l'écran

    cadreA=x-(16+(32*3));
    cadreB=x+(16+(32*3));
    cadreC=y-(16+(32*3));
    cadreD=y+(16+(32*3));

    finMenu=debut();
    while(!key[KEY_ESC]){
        if(finMenu==1 && (mouse_b & 1) && mouse_x>=0 && mouse_x<=SCREEN_W && mouse_y>=0 && mouse_y<=SCREEN_H && mouse_x>=cadreA && mouse_x<=cadreB && mouse_y>=cadreC && mouse_y<=cadreD && (getpixel(fond2,mouse_x,mouse_y)==makecol(255,255,255))){
            //ajustement des variables
            X=x;
            Y=y;
            x=mouse_x;
            y=mouse_y;
            cadreA=x-(16+(32*3));
            cadreB=x+(16+(32*3));
            cadreC=y-(16+(32*3));
            cadreD=y+(16+(32*3));
            /*
                Les conditions if et else servent a faire
            */
            if((getpixel(fond2,x,y-32)==makecol(0,0,255))){
                //ajustement de l'affichage
                recentre(&x,&y);//recentre au milieu de la case
                masked_blit(cloud,buffy,0,0,0,0,cloud->w,cloud->h);
                masked_blit(fond,buffy,0,0,0,0,fond->w,fond->h);
                masked_blit(objet,buffy,0,0,0,0,objet->w,objet->h);
                masked_blit(perso,buffy,0,0,(x-((perso->w)/2)),(y-(((perso->h)+40)/2)), perso->w,perso->h);
                masked_blit(cloud2,buffy,0,0,0,0,cloud2->w,cloud2->h);
                blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
                rest(100);
            }
            else{
                //ajustement de l'affichage
                recentre(&x,&y);//recentre au milieu de la case
                masked_blit(cloud,buffy,0,0,0,0,cloud->w,cloud->h);
                masked_blit(fond,buffy,0,0,0,0,fond->w,fond->h);
                masked_blit(perso,buffy,0,0,(x-((perso->w)/2)),(y-(((perso->h)+40)/2)), perso->w,perso->h);
                masked_blit(objet,buffy,0,0,0,0,objet->w,objet->h);
                masked_blit(cloud2,buffy,0,0,0,0,cloud2->w,cloud2->h);
                blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
                rest(100);
            }
        }
            if((getpixel(fond2,x,y-32)==makecol(0,0,255))){
                masked_blit(cloud,buffy,0,0,0,0,cloud->w,cloud->h);
                masked_blit(fond,buffy,0,0,0,0,fond->w,fond->h);
                masked_blit(objet,buffy,0,0,0,0,fond->w,fond->h);
                masked_blit(perso,buffy,0,0,(x-((perso->w)/2)),(y-(((perso->h)+40)/2)), perso->w,perso->h);
                masked_blit(cloud2,buffy,0,0,0,0,cloud2->w,cloud2->h);
                blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
            }
            else{
                masked_blit(cloud,buffy,0,0,0,0,cloud->w,cloud->h);
                masked_blit(fond,buffy,0,0,0,0,fond->w,fond->h);
                masked_blit(perso,buffy,0,0,(x-((perso->w)/2)),(y-(((perso->h)+40)/2)), perso->w,perso->h);
                masked_blit(objet,buffy,0,0,0,0,fond->w,fond->h);
                masked_blit(cloud2,buffy,0,0,0,0,cloud2->w,cloud2->h);
                blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
            }
    }
    allegro_exit();
    destroy_bitmap(buffy);
    destroy_bitmap(fond);
    destroy_bitmap(fond2);

    return 0;
}END_OF_MAIN();

/*/
    for(numBouton=0; numBouton<NBOUTON; numBouton++){
        sprintf(nomfichier,"interface%d.bmp",numBouton);
        bouton[numBouton]=load_bitmap(nomfichier,NULL);
    }
    numBouton=0;


        else if(finMenu==1 && (mouse_b & 1) && mouse_x>=14 && mouse_x<=59 && mouse_y>=680 && mouse_y<=770){
            masked_blit(cloud,buffy,0,0,0,0,cloud->w,cloud->h);
            masked_blit(fond,buffy,0,0,0,0,fond->w,fond->h);
            masked_blit(perso,buffy,0,0,(x-((perso->w)/2)),(y-((perso->h)/2)), perso->w,perso->h);
            masked_blit(objet,buffy,0,0,0,0,fond->w,fond->h);
            masked_blit(cloud2,buffy,0,0,0,0,cloud2->w,cloud2->h);
            numBouton++;
            masked_blit(bouton[numBouton],buffy,0,0,10,790,bouton[numBouton]->w,bouton[numBouton]->h);
            blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
        }
        else if(finMenu==1 && (mouse_b & 2) && mouse_x>=14 && mouse_x<=59 && mouse_y>=680 && mouse_y<=770){
            masked_blit(cloud,buffy,0,0,0,0,cloud->w,cloud->h);
            masked_blit(fond,buffy,0,0,0,0,fond->w,fond->h);
            masked_blit(perso,buffy,0,0,(x-((perso->w)/2)),(y-((perso->h)/2)), perso->w,perso->h);
            masked_blit(objet,buffy,0,0,0,0,fond->w,fond->h);
            masked_blit(cloud2,buffy,0,0,0,0,cloud2->w,cloud2->h);
            masked_blit(bouton[numBouton],buffy,0,0,0,0,bouton[numBouton]->w,bouton[numBouton]->h);
            blit(buffy,screen,0,0,0,0,buffy->w,buffy->h);
        }
/*/
